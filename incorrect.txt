index: 8
db_id: concert_singer
medium pred: SELECT name ,  song_release_year FROM singer ORDER BY age LIMIT 1
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1

index: 14
db_id: concert_singer
hard pred: SELECT Song_Name FROM singer WHERE Age  >  AVG(Age)
hard gold: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)

index: 17
db_id: concert_singer
medium pred: SELECT max(capacity) ,  average(capacity) FROM stadium
medium gold: select max(capacity), average from stadium

index: 25
db_id: concert_singer
extra pred: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T1.year  >=  2014 ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1

index: 32
db_id: concert_singer
hard pred: SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T1.year  =  2014
hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014

index: 35
db_id: concert_singer
medium pred: SELECT T1.concert_name ,  T1.theme ,  count(*) FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID  =  T2.concert_ID GROUP BY T1.concert_name
medium gold: select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id

index: 42
db_id: concert_singer
extra pred: SELECT T3.name ,  T3.location FROM concert AS T1 JOIN theme AS T2 ON T1.theme  =  T2.theme_id JOIN stadium AS T3 ON T3.Stadium_ID  =  T1.Stadium_ID WHERE T1.year  =  2014 INTERSECT SELECT T3.name ,  T3.location FROM concert AS T1 JOIN theme AS T2 ON T1.theme  =  T2.theme_id JOIN stadium AS T3 ON T3.Stadium_ID  =  T1.Stadium_ID WHERE T1.year  =  2015
extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015

index: 44
db_id: concert_singer
hard pred: SELECT count(*) FROM concert AS t1 JOIN stadium AS t2 ON t1.Stadium_ID  =  t2.Stadium_ID ORDER BY t2.Capacity DESC LIMIT 1
hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)

index: 51
db_id: pets_1
medium pred: SELECT max(weight) ,  pet_type FROM pets GROUP BY pet_type
medium gold: SELECT max(weight) ,  petType FROM pets GROUP BY petType

index: 56
db_id: pets_1
easy pred: SELECT count(DISTINCT pet_type) FROM pets
easy gold: SELECT count(DISTINCT pettype) FROM pets

index: 57
db_id: pets_1
easy pred: SELECT count(DISTINCT pet_type) FROM pets
easy gold: SELECT count(DISTINCT pettype) FROM pets

index: 58
db_id: pets_1
extra pred: SELECT DISTINCT T1.fname FROM student AS T1 JOIN has_pet AS T2 JOIN pets AS T3 ON T1.StuID  =  T2.StuID  =  T3.PetID WHERE T3.PetType  =  'Cat' OR T3.PetType  =  'Dog'
extra gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'

index: 61
db_id: pets_1
extra pred: SELECT T1.fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T3.pet_type  =  'Cat' INTERSECT SELECT T1.fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T3.pet_type  =  'Dog'
extra gold: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

index: 62
db_id: pets_1
extra pred: SELECT major ,  age FROM student WHERE StuID NOT IN (SELECT StuID FROM has_pet WHERE petid  =  'cat')
extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

index: 63
db_id: pets_1
extra pred: SELECT major ,  age FROM student WHERE StuID NOT IN (SELECT StuID FROM has_pet WHERE petid  =  "Tabsby")
extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

index: 64
db_id: pets_1
hard pred: SELECT StuID FROM has_pet EXCEPT SELECT T1.StuID FROM has_pet AS T1 JOIN pets AS T2 ON T1.PetID  =  T2.PetID WHERE T2.PetType  =  "Cat"
hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

index: 65
db_id: pets_1
hard pred: SELECT StuID FROM has_pet EXCEPT SELECT T1.StuID FROM has_pet AS T1 JOIN pets AS T2 ON T1.PetID  =  T2.PetID WHERE T2.PetType  =  "Cat"
hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

index: 66
db_id: pets_1
extra pred: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID  =  T2.StuID JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T3.pettype  =  'Dog' EXCEPT SELECT DISTINCT T1.fname ,   T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID  =  T2.StuID JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T3.pettype  =  'Cat'
extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

index: 67
db_id: pets_1
extra pred: SELECT DISTINCT T1.fname FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID  =  T2.StuID JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T3.pettype  =  'PetTypeEnum.cat' INTERSECT SELECT DISTINCT T1.fname FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID  =  T2.StuID WHERE T3.pettype  =  'PetTypeEnum.dog'
extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

index: 69
db_id: pets_1
medium pred: SELECT pet_type ,  weight FROM pets ORDER BY pet_age LIMIT 1
medium gold: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1

index: 70
db_id: pets_1
medium pred: SELECT pet_id ,  weight FROM pets WHERE pet_age  >  1
medium gold: SELECT petid ,  weight FROM pets WHERE pet_age  >  1

index: 72
db_id: pets_1
medium pred: SELECT avg(age) ,  max(age) ,  pet_type FROM pets GROUP BY pet_type
medium gold: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype

index: 73
db_id: pets_1
medium pred: SELECT avg(age) ,  max(age) ,  pettype FROM pets GROUP BY pettype
medium gold: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype

index: 74
db_id: pets_1
medium pred: SELECT avg(weight) ,  pet_type FROM pets GROUP BY pet_type
medium gold: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype

index: 75
db_id: pets_1
medium pred: SELECT avg(weight) ,  pet_type FROM pets GROUP BY pet_type
medium gold: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype

index: 90
db_id: car_1
medium pred: SELECT ContId ,  Continent ,  count(*) FROM countries GROUP BY ContId
medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;

index: 96
db_id: car_1
hard pred: SELECT Model FROM car_names JOIN cars_data ON car_names.MakeId  =  cars_data.MakeId GROUP BY Model ORDER BY Horsepower ASC LIMIT 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;

index: 97
db_id: car_1
hard pred: SELECT Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.MakeId ORDER BY Horsepower LIMIT 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;

index: 98
db_id: car_1
extra pred: SELECT Model FROM car_names WHERE Weight  <  (SELECT avg(Weight) FROM cars_data)
extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)

index: 100
db_id: car_1
extra pred: SELECT T1.Maker FROM car_makers AS T1 JOIN cars_data AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Year  =  1970
extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';

index: 101
db_id: car_1
extra pred: SELECT DISTINCT T1.maker FROM car_makers AS T1 JOIN cars_data AS T2 ON T1.id = T2.makeid WHERE T2.year  =  1970
extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';

index: 102
db_id: car_1
extra pred: SELECT T1.Make ,  T1.Year FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.Year ASC LIMIT 1
extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);

index: 103
db_id: car_1
extra pred: SELECT T1.Maker ,  T1.Year FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM cars_data)
extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);

index: 104
db_id: car_1
hard pred: SELECT DISTINCT model FROM car_names WHERE YEAR  >  1980
hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;

index: 105
db_id: car_1
hard pred: SELECT DISTINCT Model FROM car_names WHERE cars_data.Year  >  1980
hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;

index: 106
db_id: car_1
hard pred: SELECT T1.Continent ,  count(*) FROM continents AS T1 JOIN car_makers AS T2 ON T1.ContId  =  T2.Country WHERE T2.Country  =  "USA" GROUP BY T1.Continent
hard gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;

index: 107
db_id: car_1
hard pred: SELECT T1.Continent ,  count(*) FROM continents AS T1 JOIN car_makers AS T2 ON T1.ContId  =  T2.Country GROUP BY T1.Continent
hard gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;

index: 109
db_id: car_1
extra pred: SELECT T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country WHERE T2.Country  =  (SELECT country FROM car_makers GROUP BY country ORDER BY count(*) DESC LIMIT 1)
extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;

index: 111
db_id: car_1
medium pred: SELECT count(*) ,  T1.id ,  T1.FullName FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Maker  =  T2.maker GROUP BY T1.id
medium gold: SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;

index: 112
db_id: car_1
medium pred: SELECT Accelerate FROM cars_data WHERE Model  =  "AMC Hornet Sportabout"
medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

index: 113
db_id: car_1
medium pred: SELECT Accelerate FROM cars_data WHERE Model  =  "AMC Hornet Sportabout"
medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

index: 114
db_id: car_1
medium pred: SELECT count(*) FROM car_makers WHERE Country  =  "France"
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';

index: 115
db_id: car_1
medium pred: SELECT count(*) FROM car_makers WHERE Country  =  "France"
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';

index: 116
db_id: car_1
hard pred: SELECT count(DISTINCT model) FROM car_names
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';

index: 117
db_id: car_1
hard pred: SELECT count(*) FROM car_names WHERE MakeId IN (SELECT id FROM cars_data WHERE Country  =  "United States")
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';

index: 125
db_id: car_1
medium pred: SELECT T1.CountryName ,  T1.CountryId FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country
medium gold: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;

index: 130
db_id: car_1
extra pred: SELECT T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryID  =  T2.Country WHERE T1.Continent  =  "Europe" GROUP BY T1.CountryName HAVING count(*)  >=  3
extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;

index: 131
db_id: car_1
extra pred: SELECT T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country WHERE T1.Continent  =  "Europe" GROUP BY T1.CountryName HAVING count(*)  >=  3
extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;

index: 132
db_id: car_1
extra pred: SELECT max(Horsepower) ,  Make FROM cars_data WHERE Cylinders  =  3
extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;

index: 133
db_id: car_1
extra pred: SELECT T1.Make ,  T1.Model ,  T1.Year ,  MAX(T1.Horsepower) FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.MakeId WHERE T2.Cylinders  =  3 GROUP BY T1.Make ,  T1.Model ORDER BY MAX(T1.Horsepower) DESC LIMIT 1
extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;

index: 134
db_id: car_1
hard pred: SELECT Model FROM car_names ORDER BY MPG DESC LIMIT 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;

index: 135
db_id: car_1
hard pred: SELECT Model FROM cars_data ORDER BY MPG DESC LIMIT 1
hard gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;

index: 139
db_id: car_1
medium pred: SELECT avg(T1.Edispl) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId JOIN car_makers AS T3 ON T2.MakeId  =  T3.Id WHERE T3.Maker  =  "Volvo"
medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';

index: 140
db_id: car_1
medium pred: SELECT max(Accelerate) ,  Cylinde FROM cars_data GROUP BY Cylinde
medium gold: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;

index: 141
db_id: car_1
medium pred: SELECT max(Accelerate) ,  Cylininders FROM cars_data GROUP BY Cylininders
medium gold: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;

index: 143
db_id: car_1
hard pred: SELECT Model FROM model_list GROUP BY Model ORDER BY COUNT(*) DESC LIMIT 1
hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;

index: 149
db_id: car_1
medium pred: SELECT count(*) FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model  =  T2.Model WHERE T1.Maker  =  "American Motor Company"
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';

index: 151
db_id: car_1
medium pred: SELECT T1.Maker ,  T1.Id FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3
medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;

index: 152
db_id: car_1
extra pred: SELECT DISTINCT T1.Model FROM model_list AS T1 JOIN car_names AS T2 ON T1.ModelId  =  T2.ModelId JOIN cars_data AS T3 ON T3.MakeId  =  T2.MakeId WHERE T1.Maker  =  "General Motors" OR T3.Weight  >  3500
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;

index: 153
db_id: car_1
extra pred: SELECT DISTINCT T1.Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.MakeId JOIN car_makers AS T3 ON T3.Id  =  T1.MakeId WHERE T3.Maker  =  "General Motors" OR T2.Weight  >  3500
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;

index: 155
db_id: car_1
easy pred: SELECT DISTINCT YEAR FROM cars_data WHERE Weight  <  4000 INTERSECT SELECT DISTINCT YEAR FROM cars_data WHERE Weight  >  3000
easy gold: select distinct year from cars_data where weight between 3000 and 4000;

index: 158
db_id: car_1
extra pred: SELECT cylinders FROM cars_data WHERE MakeID  =  (SELECT makeid FROM car_names WHERE model  =  'volvo' ORDER BY accelerate LIMIT 1)
extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

index: 160
db_id: car_1
hard pred: SELECT count(*) FROM cars_data WHERE Accelerate  >  (SELECT max(Accelerate) FROM cars_data)
hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );

index: 161
db_id: car_1
hard pred: SELECT count(*) FROM cars_data WHERE Accelerate  >  (SELECT max(Horsepower) FROM cars_data)
hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );

index: 167
db_id: car_1
extra pred: SELECT Model FROM car_names WHERE Cylinders  =  4 ORDER BY Horsepower DESC LIMIT 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;

index: 168
db_id: car_1
extra pred: SELECT T1.MakeId ,  T1.Make FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.MakeId WHERE horsepower  >  (SELECT min(horsepower) FROM cars_data) AND T2.Cylinders  >  3
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;

index: 169
db_id: car_1
extra pred: SELECT T1.Make ,  T2.Model FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model  =  T2.Model WHERE T2.Model IN ( SELECT T2.Model FROM cars_data AS T2 WHERE T2.Cylinders  <  4 ) AND T2.Make IN ( SELECT T2.Make FROM cars_data AS T2 WHERE T2.Horsepower  <  4 )
extra gold: select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;

index: 172
db_id: car_1
extra pred: SELECT Model FROM cars_data WHERE Weight  <  3500 EXCEPT SELECT T2.Model FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model  =  T2.Model JOIN car_makers AS T3 ON T1.MakeId  =  T3.Id WHERE T3.Maker  =  'Ford Motor Company'
extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';

index: 173
db_id: car_1
extra pred: SELECT DISTINCT model FROM car_names WHERE MakeID NOT IN (SELECT MakeID FROM cars_data WHERE weight  <  3500)
extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';

index: 174
db_id: car_1
hard pred: SELECT CountryName FROM countries EXCEPT SELECT Country FROM car_makers
hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;

index: 176
db_id: car_1
extra pred: SELECT id ,  Maker FROM car_makers GROUP BY Maker HAVING count(*)  >=  2 EXCEPT SELECT id ,  Maker FROM car_makers GROUP BY Maker HAVING count(*)  >=  3
extra gold: select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;

index: 177
db_id: car_1
extra pred: SELECT T1.id ,  T1.maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1.id  =  T2.maker GROUP BY T1.id HAVING count(*)  >  2 INTERSECT SELECT T1.id ,  T1.maker FROM car_makers AS T1 JOIN cars_data AS T2 ON T1.id  =  T2.makeid GROUP BY T1.id HAVING count(*)  >  3
extra gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;

index: 178
db_id: car_1
extra pred: SELECT T1.CountryName ,  T1.CountryID FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryID  =  T2.Country WHERE T1.CountryID  =  T2.Country GROUP BY T1.CountryID HAVING count(*)  >  3 UNION SELECT T1.CountryID ,  T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryID  =  T2.Country JOIN model_list AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  "fiat"
extra gold: SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';

index: 179
db_id: car_1
extra pred: SELECT T1.CountryID ,  T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryID  =  T2.Country WHERE T1.CountryID IN (SELECT T3.CountryID FROM car_makers AS T3 GROUP BY T3.CountryID HAVING COUNT(*)  >  3) UNION SELECT T5.CountryID ,  T4.CountryName FROM cars_data AS T4 JOIN car_makers AS T5 ON T4.MakeId  =  T5.Id WHERE T4.Year  =  2008 AND T4.MPG  >  20 AND T4.Accelerate  >  15 AND T4.Horsepower  >  120 AND T4.Weight  <  3600 AND T4.Model  =  "fiat"
extra gold: select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';

index: 214
db_id: flight_2
medium pred: SELECT count(*) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.Airline WHERE T2.Airline  =  'JetBlue Airways'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"

index: 215
db_id: flight_2
medium pred: SELECT count(*) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.Airline WHERE T2.Airline  =  "Jetblue Airways"
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"

index: 223
db_id: flight_2
extra pred: SELECT city FROM airports GROUP BY city ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

index: 230
db_id: flight_2
extra pred: SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.Airline  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1

index: 231
db_id: flight_2
extra pred: SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.Airline  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1

index: 232
db_id: flight_2
extra pred: SELECT T1.Abbreviation ,  T1.Country FROM airlines AS T1 JOIN flights AS T2 ON T1.Airline  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1

index: 233
db_id: flight_2
extra pred: SELECT T1.Abbreviation ,  T1.Country FROM airlines AS T1 JOIN flights AS T2 ON T1.Airline  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1

index: 242
db_id: flight_2
medium pred: SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.Airline  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >=  10
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10

index: 243
db_id: flight_2
medium pred: SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.Airline  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >=  10
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10

index: 244
db_id: flight_2
medium pred: SELECT Airline FROM flights GROUP BY Airline HAVING count(*)  <=  200
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200

index: 245
db_id: flight_2
medium pred: SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.Airline  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <=  200
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200

index: 246
db_id: flight_2
medium pred: SELECT FlightNo FROM flights WHERE Airline  =  "United Airlines"
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"

index: 247
db_id: flight_2
medium pred: SELECT FlightNo FROM flights WHERE Airline  =  "United Airlines"
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"

index: 258
db_id: flight_2
hard pred: SELECT AirportName FROM airports EXCEPT SELECT T1.AirportName FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport INTERSECT SELECT T1.AirportName FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.DestAirport
hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)

index: 259
db_id: flight_2
hard pred: SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) UNION SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT DestAirport FROM flights)
hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)

index: 270
db_id: employee_hire_evaluation
medium pred: SELECT name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
medium gold: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1

index: 287
db_id: employee_hire_evaluation
hard pred: SELECT name FROM shop WHERE number_products  =  0
hard gold: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)

index: 296
db_id: employee_hire_evaluation
easy pred: SELECT count(DISTINCT city) FROM employee
easy gold: SELECT count(DISTINCT LOCATION) FROM shop

index: 297
db_id: employee_hire_evaluation
easy pred: SELECT count(DISTINCT license_number) FROM shop
easy gold: SELECT count(DISTINCT LOCATION) FROM shop

index: 312
db_id: cre_Doc_Template_Mgt
extra pred: SELECT T2.template_id ,  T1.template_type_code FROM Ref_Template_Types AS T1 JOIN templates AS T2 ON T1.template_type_code  =  T2.template_type_code JOIN documents AS T3 ON T2.template_id  =  T3.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1

index: 323
db_id: cre_Doc_Template_Mgt
easy pred: SELECT DISTINCT template_type_code FROM Ref_Template_Types
easy gold: SELECT DISTINCT template_type_code FROM Templates

index: 336
db_id: cre_Doc_Template_Mgt
medium pred: SELECT template_type_code ,  min(version_number) FROM Templates GROUP BY template_type_code
medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates

index: 337
db_id: cre_Doc_Template_Mgt
medium pred: SELECT template_type_code ,  min(version_number) FROM Templates GROUP BY template_type_code
medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates

index: 342
db_id: cre_Doc_Template_Mgt
medium pred: SELECT TYPE_CODE ,  COUNT(*) FROM Documents GROUP BY TYPE_CODE
medium gold: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code

index: 343
db_id: cre_Doc_Template_Mgt
medium pred: SELECT TYPE_TYPE_CODE ,  COUNT(*) FROM Documents GROUP BY TYPE_TYPE_CODE
medium gold: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code

index: 344
db_id: cre_Doc_Template_Mgt
extra pred: SELECT template_type_code FROM Documents GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1

index: 345
db_id: cre_Doc_Template_Mgt
extra pred: SELECT template_type_code FROM Documents GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1

index: 346
db_id: cre_Doc_Template_Mgt
hard pred: SELECT template_type_code FROM Ref_Template_Types EXCEPT SELECT template_type_code FROM Templates
hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

index: 347
db_id: cre_Doc_Template_Mgt
hard pred: SELECT template_type_code FROM Ref_Template_Types EXCEPT SELECT template_type_code FROM Templates
hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

index: 357
db_id: cre_Doc_Template_Mgt
medium pred: SELECT template_id FROM Templates WHERE template_details  =  'Presentation'
medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"

index: 362
db_id: cre_Doc_Template_Mgt
medium pred: SELECT Other_Details FROM Paragraphs WHERE Paragraph_Text  =  'Korea '
medium gold: select other_details from paragraphs where paragraph_text like 'korea'

index: 363
db_id: cre_Doc_Template_Mgt
medium pred: SELECT Other_Details FROM Paragraphs WHERE Paragraph_Text  =  'Korea '
medium gold: select other_details from paragraphs where paragraph_text like 'korea'

index: 364
db_id: cre_Doc_Template_Mgt
medium pred: SELECT t3.paragraph_text FROM documents AS t1 JOIN templates AS t2 ON t1.template_id  =  t2.template_id JOIN paragraphs AS t3 ON t1.document_id  =  t3.document_id WHERE t1.document_name  =  'Welcome to NY'
medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'

index: 374
db_id: cre_Doc_Template_Mgt
extra pred: SELECT Document_ID ,  Document_name FROM Documents GROUP BY Document_ID ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1

index: 378
db_id: cre_Doc_Template_Mgt
easy pred: SELECT T2.document_id FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T2.document_id HAVING COUNT(*)  =  2
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2

index: 398
db_id: course_teach
easy pred: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) ASC LIMIT 1
easy gold: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2

index: 399
db_id: course_teach
easy pred: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY count(*) ASC LIMIT 1
easy gold: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2

index: 401
db_id: course_teach
medium pred: SELECT T2.Name ,  T1.Course FROM course AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID

index: 404
db_id: course_teach
hard pred: SELECT T2.Name FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID  =  T2.Course_ID WHERE T1.course  =  'Math'
hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"

index: 405
db_id: course_teach
hard pred: SELECT T2.name FROM course AS T1 JOIN teacher AS T2 ON T1.teacher_ID  =  T2.teacher_ID WHERE T1.course  =  'Math'
hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"

index: 415
db_id: museum_visit
medium pred: SELECT name ,  LEVEL_of_membership FROM visitor WHERE LEVEL_of_membership  >  4 ORDER BY age
medium gold: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC

index: 421
db_id: museum_visit
extra pred: SELECT T2.id ,  T2.name ,  T2.level_of_membership FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_id  =  T2.id GROUP BY T2.id ORDER BY sum(T1.total_spent) DESC LIMIT 1
extra gold: SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1

index: 426
db_id: museum_visit
medium pred: SELECT sum(T1.num_of_ticket) FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_id  =  T2.id WHERE T2.Level_of_membership  =  '1'
medium gold: SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1

index: 440
db_id: wta_1
easy pred: SELECT max(loser_rank) FROM matches
easy gold: SELECT min(loser_rank) FROM matches

index: 441
db_id: wta_1
easy pred: SELECT loser_rank FROM matches GROUP BY loser_rank ORDER BY count(*) DESC LIMIT 1
easy gold: SELECT min(loser_rank) FROM matches

index: 448
db_id: wta_1
hard pred: SELECT T2.winner_name FROM rankings AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T1.ranking_date  =  "2013" INTERSECT SELECT T2.winner_name FROM rankings AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T1.ranking_date  =  "2016"
hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016

index: 449
db_id: wta_1
hard pred: SELECT T1.first_name ,  T1.last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id WHERE T2.ranking_date  =  "2013" INTERSECT SELECT T1.first_name ,  T1.last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id WHERE T2.ranking_date  =  "2016"
hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016

index: 453
db_id: wta_1
extra pred: SELECT T1.first_name ,  T1.country_code FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id JOIN rankings AS T3 ON T1.player_id  =  T3.player_id WHERE T2.ranking  =  "WTA Championships" AND T3.ranking  =  "Australian Open"
extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'

index: 454
db_id: wta_1
medium pred: SELECT first_name ,  country_code FROM players ORDER BY birth_date DESC LIMIT 1
medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1

index: 455
db_id: wta_1
medium pred: SELECT first_name ,  country_code FROM players ORDER BY birth_date DESC LIMIT 1
medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1

index: 460
db_id: wta_1
hard pred: SELECT T1.first_name ,  T1.country_code FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY sum(T2.tours) DESC LIMIT 1
hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1

index: 461
db_id: wta_1
hard pred: SELECT first_name ,  country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1

index: 465
db_id: wta_1
hard pred: SELECT winner_name ,  sum(winner_rank_points) FROM matches GROUP BY winner_name ORDER BY sum(winner_rank_points) DESC LIMIT 1
hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1

index: 466
db_id: wta_1
hard pred: SELECT winner_name FROM rankings AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id JOIN tournaments AS T3 ON T3.tourney_id  =  T2.tourney_id WHERE T1.ranking  =  "World No.1" AND T3.tourney_name  =  "Australian Open"
hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1

index: 467
db_id: wta_1
hard pred: SELECT winner_name FROM ranks AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T1.ranking_points  =  (SELECT max(ranking_points) FROM ranks AS T3 JOIN matches AS T4 ON T3.player_id  =  T4.winner_id WHERE T4.tourney_name  =  "Australian Open")
hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1

index: 470
db_id: wta_1
medium pred: SELECT avg(ranking) ,  first_name FROM players GROUP BY first_name
medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

index: 471
db_id: wta_1
medium pred: SELECT first_name ,  avg(ranking_points) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY first_name
medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

index: 480
db_id: wta_1
medium pred: SELECT ranking_date ,  count(*) FROM rankings GROUP BY ranking_date
medium gold: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date

index: 481
db_id: wta_1
medium pred: SELECT ranking_date ,  count(*) FROM rankings GROUP BY ranking_date
medium gold: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date

index: 487
db_id: wta_1
medium pred: SELECT count(*) FROM matches AS T1 JOIN tourney_dates AS T2 ON T1.tourney_id  =  T2.tourney_id WHERE T1.surface  =  "grass" AND T1.winner_hand  =  "left" AND T2.year  =  2016
medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'

index: 494
db_id: battle_death
medium pred: SELECT name ,  date ,  RESULT FROM battle
medium gold: SELECT name ,  date FROM battle

index: 497
db_id: battle_death
medium pred: SELECT T1.note ,  T1.injured FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
medium gold: SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

index: 500
db_id: battle_death
hard pred: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN death AS T2 ON T2.caused_by_ship_id  =  T1.id GROUP BY T1.id HAVING sum(T2.killed)  >  10
hard gold: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10

index: 501
db_id: battle_death
extra pred: SELECT caused_by_ship_id ,  T1.name FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id GROUP BY caused_by_ship_id ORDER BY sum(injured) DESC LIMIT 1
extra gold: SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1

index: 506
db_id: battle_death
extra pred: SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'
extra gold: SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

index: 526
db_id: student_transcripts_tracking
medium pred: SELECT course_name ,  course_id FROM SECTIONS GROUP BY course_id HAVING count(*)  <=  2
medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2

index: 527
db_id: student_transcripts_tracking
medium pred: SELECT course_name ,  course_id FROM courses GROUP BY course_id HAVING count(*)  <  2
medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2

index: 534
db_id: student_transcripts_tracking
medium pred: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id  =  T2.student_id WHERE degree_program_id  =  "Degree Program id 2" AND semester_id  =  "Semester id" GROUP BY T1.student_id HAVING count(*)  =  2
medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2

index: 535
db_id: student_transcripts_tracking
medium pred: SELECT T2.first_name ,  T2.middle_name ,  T2.last_name ,  T2.student_id FROM Student_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE degree_program_id IN (SELECT degree_program_id FROM Student_Enrolment GROUP BY degree_program_id HAVING count(*)  =  2) AND semester_id IN (SELECT semester_id FROM Student_Enrolment GROUP BY semester_id HAVING count(*)  =  2)
medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2

index: 540
db_id: student_transcripts_tracking
extra pred: SELECT T1.degree_program_id ,  T2.degree_summary_description FROMdegree_enrolment AS T1 JOIN degree_programs AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1

index: 541
db_id: student_transcripts_tracking
extra pred: SELECT T1.degree_program_id ,  T2.degree_summary_description FROM Student_Enrolment AS T1 JOIN Degree_Programs AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1

index: 542
db_id: student_transcripts_tracking
extra pred: SELECT T2.student_id ,  T2.first_name ,  T2.middle_name ,  T2.last_name ,  count(*) FROM Student_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T2.student_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

index: 543
db_id: student_transcripts_tracking
extra pred: SELECT T2.first_name ,  T2.middle_name ,  T2.last_name ,  T2.student_id ,  COUNT(*) FROM Student_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T2.student_id ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

index: 548
db_id: student_transcripts_tracking
extra pred: SELECT T2.course_name FROM Student_Enrolment_Courses AS T1 JOIN Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1

index: 549
db_id: student_transcripts_tracking
extra pred: SELECT T2.course_name FROM Student_Enrolment_Courses AS T1 JOIN Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1

index: 553
db_id: student_transcripts_tracking
medium pred: SELECT T1.transcript_date ,  T1.transcript_id FROM TRANSCRIPTS AS T1 JOIN TRANSCIPT_CONTENTS AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2

index: 562
db_id: student_transcripts_tracking
extra pred: SELECT T2.address_id ,  T1.line_1 ,  T1.line_2 ,  T1.line_3 FROM addresses AS T1 JOIN students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T2.current_address_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

index: 563
db_id: student_transcripts_tracking
extra pred: SELECT T1.address_id ,  T2.line_1 ,  T2.line_2 FROM addresses AS T2 JOIN students AS T1 ON T1.current_address_id  =  T2.address_id GROUP BY T2.address_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

index: 573
db_id: student_transcripts_tracking
hard pred: SELECT count(*) ,  T1.student_enrolment_id FROM Student_Enrolment AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_enrolment_id  =  T2.student_enrolment_id GROUP BY T1.student_enrolment_id ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1

index: 574
db_id: student_transcripts_tracking
extra pred: SELECT transcript_date ,  transcript_id FROM TRANSCIPTS GROUP BY transcript_id ORDER BY count(*) ASC LIMIT 1
extra gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1

index: 575
db_id: student_transcripts_tracking
extra pred: SELECT transcript_date ,  transcript_id FROM TRANSCRIPT_CONTENTS GROUP BY transcript_id ORDER BY count(*) ASC LIMIT 1
extra gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1

index: 576
db_id: student_transcripts_tracking
extra pred: SELECT T1.semester_name FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id WHERE T2.degree_program_id  =  'Master_degree' INTERSECT SELECT T1.semester_name FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id WHERE T2.degree_program_id  =  'Bachelors_degree'
extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'

index: 577
db_id: student_transcripts_tracking
extra pred: SELECT semester_id FROM student_enrolment WHERE degree_program_id  =  'Masters' INTERSECT SELECT semester_id FROM student_enrolment WHERE degree_program_id  =  'Bachelors'
extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'

index: 579
db_id: student_transcripts_tracking
easy pred: SELECT DISTINCT current_address_id FROM STUDENTS UNION SELECT DISTINCT permanent_address_id FROM STUDENTS
easy gold: SELECT count(DISTINCT current_address_id) FROM Students

index: 588
db_id: tvshow
easy pred: SELECT id FROM Cartoon WHERE Directed_by  =  "Ben Jones"
easy gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";

index: 609
db_id: tvshow
medium pred: SELECT country ,  count(*) FROM TV_channel GROUP BY country
medium gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE

index: 610
db_id: tvshow
medium pred: SELECT T2.series_name FROM cartoon AS T1 JOIN TV_series AS T2 ON T1.channel  =  T2.channel WHERE T1.title  =  "The Rise of the Blue Beetle!"
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";

index: 611
db_id: tvshow
medium pred: SELECT T2.series_name FROM cartoon AS T1 JOIN tv_series AS T2 ON T1.channel  =  T2.channel WHERE T1.title  =  "The Rise of the Blue Beetle"
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";

index: 625
db_id: tvshow
medium pred: SELECT series FROM TV_series WHERE Episode  =  "A Love of a Lifetime"
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";

index: 627
db_id: tvshow
medium pred: SELECT Episode FROM TV_series WHERE series_name  =  "Sky Radio"
medium gold: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";

index: 633
db_id: tvshow
medium pred: SELECT Pixel_aspect_ratio_PAR ,  series_name FROM TV_channel WHERE Hight_definition_TV  =  'YES'
medium gold: SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"

index: 636
db_id: tvshow
hard pred: SELECT country FROM tv_channel EXCEPT SELECT channel FROM cartoon WHERE written_by  =  'Todd Casey'
hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'

index: 637
db_id: tvshow
hard pred: SELECT country FROM TV_channel EXCEPT SELECT channel FROM cartoon WHERE written_by  =  "Todd Casey"
hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'

index: 642
db_id: tvshow
easy pred: SELECT channel FROM TV_series GROUP BY channel HAVING count(*)  >  2
easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2

index: 643
db_id: tvshow
easy pred: SELECT id FROM TV_Channel GROUP BY id HAVING count(*)  >  2
easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2

index: 646
db_id: tvshow
hard pred: SELECT package_option FROM TV_channel EXCEPT SELECT T1.package_option FROM TV_channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.channel WHERE T2.directed_by  =  "Ben Jones"
hard gold: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')

index: 647
db_id: tvshow
hard pred: SELECT Package_Option FROM TV_Channel EXCEPT SELECT T1.Package_Option FROM TV_channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.channel WHERE T2.directed_by  =  "Ben Jones"
hard gold: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')

index: 699
db_id: voter_1
extra pred: SELECT area_code FROM votes GROUP BY area_code ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1

index: 701
db_id: voter_1
extra pred: SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.area_code  =  T2.area_code JOIN contestants AS T3 ON T2.contestant_number  =  T3.contestant_number WHERE T3.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.area_code  =  T2.area_code JOIN contestants AS T3 ON T2.contestant_number  =  T3.contestant_number WHERE T3.contestant_name  =  'Kelly Clauss'
extra gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'

index: 711
db_id: world_1
medium pred: SELECT Region FROM country WHERE Capital  =  "Kabul";
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"

index: 712
db_id: world_1
medium pred: SELECT Region FROM country WHERE Capital  =  "Kabul";
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"

index: 713
db_id: world_1
extra pred: SELECT Language FROM countrylanguage WHERE CountryCode  =  "AW" ORDER BY Percentage DESC LIMIT 1
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1

index: 714
db_id: world_1
extra pred: SELECT Language FROM countrylanguage WHERE CountryCode  =  "AW" AND ISOFFICIAL  =  1 GROUP BY Language HAVING percentage  =  MAX(percentage);
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1

index: 720
db_id: world_1
easy pred: SELECT avg(LifeExpectancy) FROM country WHERE continent  =  "Central Africa"
easy gold: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"

index: 732
db_id: world_1
medium pred: SELECT avg(GNP) ,  sum(population) FROM country WHERE region = "Caribbean" OR region = "Central America" OR region = "South America";
medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"

index: 737
db_id: world_1
medium pred: SELECT count(*) FROM countrylanguage WHERE countrycode  =  "ARU";
medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"

index: 739
db_id: world_1
medium pred: SELECT count(*) FROM countrylanguage WHERE CountryCode  =  "AFG" AND ISOFFICIAL  =  1
medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"

index: 740
db_id: world_1
medium pred: SELECT count(*) FROM countrylanguage WHERE countrycode  =  "AF" AND ISOFFICIAL  = 1
medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"

index: 741
db_id: world_1
extra pred: SELECT T1.name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.code  =  T2.countrycode GROUP BY T1.code ORDER BY sum(T2.percentage) DESC LIMIT 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1

index: 742
db_id: world_1
extra pred: SELECT T1.name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.code  =  T2.countrycode GROUP BY T1.code ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1

index: 743
db_id: world_1
extra pred: SELECT continent FROM countrylanguage GROUP BY continent ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1

index: 744
db_id: world_1
extra pred: SELECT Continent FROM countrylanguage GROUP BY CountryCode HAVING sum(percentage)  =  (SELECT max(sum(percentage)) FROM countrylanguage GROUP BY CountryCode)
extra gold: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1

index: 745
db_id: world_1
easy pred: SELECT COUNT ( * ) FROM countrylanguage WHERE language  =  "English" INTERSECT SELECT COUNT ( * ) FROM countrylanguage WHERE language  =  "Dutch"
easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")

index: 746
db_id: world_1
easy pred: SELECT COUNT ( DISTINCT countrycode ) FROM countrylanguage WHERE language  =  "English" INTERSECT SELECT COUNT ( DISTINCT countrycode ) FROM countrylanguage WHERE language  =  "Dutch"
easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")

index: 750
db_id: world_1
extra pred: SELECT CountryName FROM country WHERE CountryCode IN (SELECT CountryCode FROM countrylanguage WHERE isofficial  =  'T') GROUP BY CountryName HAVING count(*)  =  2
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"

index: 753
db_id: world_1
hard pred: SELECT DISTINCT REGION FROM countrylanguage WHERE language  =  "English" OR language  =  "Dutch"
hard gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"

index: 754
db_id: world_1
hard pred: SELECT Region FROM country WHERE Code2  =  "Code2" AND Language  =  "Language"
hard gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"

index: 755
db_id: world_1
extra pred: SELECT CountryName FROM country WHERE Code IN ( SELECT CountryCode FROM countrylanguage WHERE ISOFFICIAL  = 1 AND language  =  "English" ) UNION SELECT CountryName FROM country WHERE Code IN ( SELECT CountryCode FROM countrylanguage WHERE ISOFFICIAL  =  1 AND language  =  "Dutch" )
extra gold: select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "english" and isofficial  =  "t" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "dutch" and isofficial  =  "t"

index: 756
db_id: world_1
extra pred: SELECT CountryCode FROM countrylanguage WHERE language  =  "English" GROUP BY CountryCode HAVING sum(isofficial)  >  1 UNION SELECT CountryCode FROM countrylanguage WHERE language  =  "Dutch" GROUP BY CountryCode HAVING sum(isofficial)  >  1
extra gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"

index: 757
db_id: world_1
extra pred: SELECT Language FROM countrylanguage WHERE countrycode  =  (SELECT code FROM country WHERE continent  =  "Asia") GROUP BY Language ORDER BY sum(percentage) DESC LIMIT 1
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1

index: 758
db_id: world_1
extra pred: SELECT language FROM countrylanguage WHERE countrycode IN (SELECT countrycode FROM country WHERE continent  =  "Asia") GROUP BY language ORDER BY sum(percentage) DESC LIMIT 1
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1

index: 759
db_id: world_1
hard pred: SELECT language FROM countrylanguage WHERE isofficial  =  yes GROUP BY language HAVING count(*)  =  1
hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1

index: 760
db_id: world_1
hard pred: SELECT language FROM countrylanguage WHERE countrycode IN (SELECT countrycode FROM country WHERE governmentform  =  'Republic') GROUP BY language HAVING count(*)  =  1
hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1

index: 761
db_id: world_1
extra pred: SELECT t1.name FROM city AS t1 JOIN countrylanguage AS t2 ON t1.countrycode  =  t2.countrycode WHERE t2.language  =  "English" ORDER BY t1.population DESC LIMIT 1
extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1

index: 762
db_id: world_1
extra pred: SELECT DISTINCT city.name FROM city WHERE city.population  =  ( SELECT MAX ( population ) FROM city WHERE city.population  >=  150000 AND city.name IN ( SELECT t2.name FROM countrylanguage AS t2 JOIN city AS t1 ON city.countrycode  =  countrycode WHERE t2.language  =  'English' ) ) AND city.name IN ( SELECT t2.name FROM countrylanguage AS t2 JOIN city AS t1 ON city.countrycode  =  countrycode WHERE t2.language  =  'English' );
extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1

index: 765
db_id: world_1
extra pred: SELECT avg(LifeExpectancy) FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE isofficial  =  't')
extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")

index: 766
db_id: world_1
extra pred: SELECT avg(lifeexpectancy) FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE isofficial  =  't')
extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")

index: 767
db_id: world_1
extra pred: SELECT sum(population) FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE isofficial  =  'o')
extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")

index: 768
db_id: world_1
extra pred: SELECT sum(population) FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE isofficial  =  'o')
extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")

index: 769
db_id: world_1
medium pred: SELECT LANGUAGE FROM countrylanguage WHERE countrycode  =  (SELECT countrycode FROM country WHERE headofstate  =  "Beatrix") AND ISOFFICIAL  =  1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"

index: 770
db_id: world_1
medium pred: SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.code  =  T2.countrycode WHERE T1.headofstate  =  "Beatrix" AND T2.isoffical  =  1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"

index: 772
db_id: world_1
medium pred: SELECT count(DISTINCT language) FROM countrylanguage WHERE countrycode IN (SELECT countrycode FROM country WHERE indepyear  <  1930) AND isofficial  = 1
medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"

index: 773
db_id: world_1
hard pred: SELECT name FROM country WHERE surfacearea  >  (SELECT max(surfacearea) FROM country WHERE continent  =  "Europe")
hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")

index: 774
db_id: world_1
hard pred: SELECT name FROM country WHERE surfacearea  >  (SELECT max(surfacearea) FROM country WHERE continent  =  "Europe")
hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")

index: 775
db_id: world_1
extra pred: SELECT name FROM country WHERE population  <  (SELECT min(population) FROM country WHERE continent  =  'Asia') AND continent  =  'Africa';
extra gold: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia")

index: 777
db_id: world_1
extra pred: SELECT name FROM country WHERE population  >  (SELECT max(population) FROM country WHERE region  =  'Africa') AND continent  =  'Asia';
extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  "Africa")

index: 778
db_id: world_1
extra pred: SELECT name FROM country WHERE population  >  (SELECT max(population) FROM country WHERE continent  =  'Africa') AND continent  =  'Asia';
extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa")

index: 779
db_id: world_1
hard pred: SELECT countrycode FROM country WHERE countrycode NOT IN (SELECT countrycode FROM countrylanguage WHERE isofficial  =  'o')
hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

index: 780
db_id: world_1
hard pred: SELECT countrycode FROM country WHERE countrycode NOT IN (SELECT countrycode FROM countrylanguage WHERE isofficial  =  'o')
hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

index: 783
db_id: world_1
hard pred: SELECT countrycode FROM country WHERE countrycode NOT IN (SELECT countrycode FROM countrylanguage WHERE isofficial  =  't') AND governmentform != 'Republic'
hard gold: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

index: 784
db_id: world_1
hard pred: SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE isofficial  =  'T' ) AND governmentform != "Republic"
hard gold: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

index: 785
db_id: world_1
extra pred: SELECT t1.name FROM city AS t1 JOIN country AS t2 ON t1.countrycode  =  t2.code WHERE t2.continent  =  'Europe' AND countrylanguage.language  =  'English' AND countrylanguage.isoffical  =  0
extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')

index: 786
db_id: world_1
extra pred: SELECT name FROM city WHERE countrycode  =  countrylanguage.countrycode AND isofficial  =  0 GROUP BY name HAVING countrycode IN ( SELECT countrycode FROM country WHERE continent  =  "Europe")
extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')

index: 788
db_id: world_1
hard pred: SELECT DISTINCT t1.name FROM country AS t2 JOIN city AS t1 ON t2.code  =  t1.countrycode WHERE t2.continent  =  "Asia" AND t1.name  =  "Chinese" AND t2.code2  =  t2.code2;
hard gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

index: 797
db_id: world_1
medium pred: SELECT governmentform ,  SUM(population) FROM country WHERE lifeexpectancy  >  72 GROUP BY governmentform
medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72

index: 798
db_id: world_1
medium pred: SELECT governmentform ,  SUM(population) FROM country WHERE lifeexpectancy  >  72 GROUP BY governmentform
medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72

index: 799
db_id: world_1
medium pred: SELECT continent ,  avg(lifeexpectancy) ,  sum(population) FROM country WHERE lifeexpectancy  <  72 GROUP BY continent
medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72

index: 800
db_id: world_1
medium pred: SELECT continent ,  sum(population) ,  avg(lifeexpectancy) FROM country WHERE lifeexpectancy  <  72 GROUP BY continent
medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72

index: 815
db_id: world_1
hard pred: SELECT language FROM countrylanguage GROUP BY language ORDER BY SUM(percentage) DESC LIMIT 1
hard gold: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1

index: 817
db_id: world_1
medium pred: SELECT Language ,  CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY sum(percentage) DESC LIMIT 1
medium gold: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode

index: 818
db_id: world_1
medium pred: SELECT CountryCode ,  LANGUAGE FROM countrylanguage GROUP BY CountryCode ORDER BY Percentage DESC LIMIT 1
medium gold: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode

index: 819
db_id: world_1
extra pred: SELECT CountryCode FROM countrylanguage WHERE Language  =  "Spanish" GROUP BY CountryCode ORDER BY sum(percentage) DESC LIMIT 1
extra gold: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode

index: 820
db_id: world_1
extra pred: SELECT count(*) FROM countrylanguage WHERE language  =  "Spanish" AND isofficial  =  1 GROUP BY countrycode HAVING percentage  >  50
extra gold: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode

index: 821
db_id: world_1
medium pred: SELECT CountryCode FROM countrylanguage WHERE Language  =  "Spanish" GROUP BY CountryCode ORDER BY SUM(percentage) DESC LIMIT 1
medium gold: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode

index: 822
db_id: world_1
medium pred: SELECT CountryCode FROM countrylanguage WHERE Language  =  "Spanish" GROUP BY CountryCode HAVING Percentage  >  50
medium gold: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode

index: 841
db_id: orchestra
medium pred: SELECT T2.Name ,  T3.Orchestra FROM performance AS T1 JOIN conductor AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID JOIN orchestra AS T3 ON T1.Orchestra_ID  =  T3.Orchestra_ID
medium gold: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID

index: 842
db_id: orchestra
medium pred: SELECT T3.Name ,  T2.Orchestra FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID JOIN conductor AS T3 ON T3.Conductor_ID  =  T1.Conductor_ID
medium gold: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID

index: 845
db_id: orchestra
extra pred: SELECT T2.Name FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1

index: 846
db_id: orchestra
extra pred: SELECT T2.Name FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1

index: 852
db_id: orchestra
medium pred: SELECT Major_Record_Format FROM orchestra ORDER BY count(*) DESC
medium gold: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC

index: 884
db_id: network_1
medium pred: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id  =  T2.id
medium gold: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id

index: 887
db_id: network_1
extra pred: SELECT T1.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

index: 888
db_id: network_1
extra pred: SELECT T1.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id  =  T2.id GROUP BY T1.friend_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

index: 891
db_id: network_1
hard pred: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id  =  T2.id WHERE T1.student_id  =  0
hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

index: 892
db_id: network_1
hard pred: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id  =  T2.id WHERE T1.student_id  =  'Kyle'
hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

index: 893
db_id: network_1
medium pred: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id  =  T2.id WHERE T2.name  =  "Kyle"
medium gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"

index: 894
db_id: network_1
medium pred: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id  =  T2.id WHERE T2.name  =  'Kyle'
medium gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"

index: 899
db_id: network_1
hard pred: SELECT id FROM highschooler WHERE id IN (SELECT student_id FROM likes) AND id IN (SELECT friend_id FROM friend)
hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes

index: 900
db_id: network_1
hard pred: SELECT student_id FROM Friend INTERSECT SELECT student_id FROM Likes
hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes

index: 901
db_id: network_1
hard pred: SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.id  =  T2.student_id INTERSECT SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.id  =  T2.student_id
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

index: 902
db_id: network_1
hard pred: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

index: 911
db_id: network_1
hard pred: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2 INTERSECT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id  =  T2.id GROUP BY T1.friend_id HAVING count(*)  >=  2
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2

index: 915
db_id: network_1
hard pred: SELECT avg(T1.grade) FROM highschooler AS T1 JOIN friend AS T2 ON T1.id  =  T2.student_id WHERE T1.id IN (SELECT T2.student_id FROM friend AS T2 GROUP BY T2.student_id HAVING count(*)  >  1)
hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

index: 916
db_id: network_1
hard pred: SELECT avg(T1.grade) FROM highschooler AS T1 JOIN friend AS T2 ON T1.id  =  T2.student_id WHERE T1.id IN (SELECT T2.student_id FROM friend AS T2 JOIN highschooler AS T1 ON T1.id  =  T2.friend_id)
hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

index: 921
db_id: dog_kennels
hard pred: SELECT avg(T1.age) FROM dogs AS T1 JOIN treatments AS T2 ON T1.dog_id  =  T2.dog_id
hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

index: 922
db_id: dog_kennels
hard pred: SELECT avg(T1.age) FROM dogs AS T1 JOIN treatments AS T2 ON T1.dog_id  =  T2.dog_id
hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

index: 923
db_id: dog_kennels
extra pred: SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2 INTERSECT SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  "Indiana"
extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2

index: 924
db_id: dog_kennels
extra pred: SELECT T1.professional_id ,  T1.first_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T1.state  =  "Indiana" OR count(*)  >  2
extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2

index: 925
db_id: dog_kennels
hard pred: SELECT T1.name FROM dogs AS T1 JOIN treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T2.cost_of_treatment  >  1000
hard gold: select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )

index: 926
db_id: dog_kennels
hard pred: SELECT T2.name FROM treatments AS T1 JOIN dogs AS T2 ON T1.dog_id  =  T2.dog_id JOIN owners AS T3 ON T3.owner_id  =  T2.owner_id GROUP BY T3.owner_id HAVING sum(T1.charge_amount)  >  1000
hard gold: select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )

index: 927
db_id: dog_kennels
hard pred: SELECT first_name FROM (owners UNION professionals) EXCEPT SELECT name FROM dogs
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs

index: 928
db_id: dog_kennels
hard pred: SELECT first_name FROM (owners UNION professionals) EXCEPT SELECT name FROM dogs
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs

index: 929
db_id: dog_kennels
extra pred: SELECT professional_id ,  role_code ,  email_address FROM professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T2.email_address FROM treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id
extra gold: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

index: 930
db_id: dog_kennels
extra pred: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT professional_id ,  role_code ,  email_address FROM Treatments
extra gold: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

index: 932
db_id: dog_kennels
extra pred: SELECT owner_id ,  first_name ,  last_name FROM owners ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

index: 933
db_id: dog_kennels
medium pred: SELECT T1.professional_id ,  T2.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id INTERSECT SELECT professional_id ,  role_code ,  first_name FROM treatments AS T1 JOIN professionals AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

index: 934
db_id: dog_kennels
medium pred: SELECT T1.professional_id ,  T2.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatment_Types AS T2 ON T2.treatment_type_code  =  TREATMENT_TYPE_CODE GROUP BY T1.professional_id HAVING count(*)  >=  2
medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

index: 937
db_id: dog_kennels
extra pred: SELECT T1.owner_id ,  T2.last_name FROM treatments AS T1 JOIN owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

index: 938
db_id: dog_kennels
extra pred: SELECT T1.owner_id ,  T2.last_name FROM treatments AS T1 JOIN owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY sum(T1.cost_of_treatment) DESC LIMIT 1
extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

index: 939
db_id: dog_kennels
extra pred: SELECT T1.treatment_type_description FROM treatment_types AS T1 JOIN treatments AS T2 ON T1.treatment_type_code  =  T2.treachment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(T2.cost_of_treatment) ASC LIMIT 1
extra gold: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1

index: 940
db_id: dog_kennels
extra pred: SELECT T1.treatment_type_description FROM treatment_types AS T1 JOIN treatments AS T2 ON T1.treatment_type_code  =  T2.treachment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(T2.cost_of_treatment) LIMIT 1
extra gold: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1

index: 941
db_id: dog_kennels
extra pred: SELECT t1.owner_id ,  t1.zip_code FROM owners AS t1 JOIN dogs AS t2 ON t1.owner_id  =  t2.owner_id JOIN charges AS t3 ON t3.charge_id  =  t2.dog_id GROUP BY t1.owner_id ORDER BY sum(t3.charge_amount) DESC LIMIT 1
extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1

index: 942
db_id: dog_kennels
extra pred: SELECT t1.owner_id ,  t1.zip_code FROM owners AS t1 JOIN dogs AS t2 ON t1.owner_id  =  t2.owner_id GROUP BY t1.owner_id ORDER BY sum(t2.charge_amount) DESC LIMIT 1
extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1

index: 943
db_id: dog_kennels
medium pred: SELECT T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

index: 945
db_id: dog_kennels
extra pred: SELECT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_Types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code WHERE T2.cost_of_treatment  <  (SELECT avg(cost_of_treatment) FROM Treatments)
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )

index: 946
db_id: dog_kennels
extra pred: SELECT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.cost_of_treatment  <  (SELECT avg(cost_of_treatment) FROM Treatments)
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )

index: 948
db_id: dog_kennels
medium pred: SELECT T1.date_of_treatment ,  T3.first_name FROM treatments AS T1 JOIN professionals AS T2 ON T1.professional_id  =  T2.professional_id JOIN Breeds AS T3 ON T3.breed_code  =  T1.breed_code
medium gold: SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id

index: 951
db_id: dog_kennels
medium pred: SELECT T2.first_name ,  T2.last_name ,  T1.size_description FROM Sizes AS T1 JOIN Dogs AS T2 ON T1.size_code  =  T2.size_code
medium gold: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id

index: 952
db_id: dog_kennels
medium pred: SELECT T1.first_name ,  T1.last_name ,  T2.size_description FROM owners AS T1 JOIN dogs AS T2 ON T1.owner_id  =  T2.owner_id
medium gold: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id

index: 955
db_id: dog_kennels
extra pred: SELECT T2.name ,  T3.date_of_treatment FROM treatments AS T1 JOIN dogs AS T2 ON T1.dog_id  =  T2.dog_id JOIN breeds AS T3 ON T2.breed_code  =  T3.breed_code GROUP BY T3.breed_code ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )

index: 956
db_id: dog_kennels
extra pred: SELECT T1.name ,  T3.date_of_treatment FROM dogs AS T1 JOIN breeds AS T2 ON T1.breed_code  =  T2.breed_code JOIN treatments AS T3 ON T1.dog_id  =  T3.dog_id GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )

index: 961
db_id: dog_kennels
extra pred: SELECT t1.last_name FROM owners AS t1 JOIN dogs AS t2 ON t1.owner_id  =  t2.owner_id ORDER BY t2.age ASC LIMIT 1
extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )

index: 962
db_id: dog_kennels
extra pred: SELECT t1.last_name FROM owners AS t1 JOIN dogs AS t2 ON t1.owner_id  =  t2.owner_id ORDER BY t2.age ASC LIMIT 1
extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )

index: 973
db_id: dog_kennels
medium pred: SELECT first_name ,  last_name ,  email_address FROM OWNERS WHERE city LIKE '%North%'
medium gold: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'

index: 974
db_id: dog_kennels
medium pred: SELECT first_name ,  last_name ,  email_address FROM owners WHERE city LIKE '%North%'
medium gold: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'

index: 979
db_id: dog_kennels
extra pred: SELECT count(*) FROM treatments
extra gold: SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )

index: 980
db_id: dog_kennels
extra pred: SELECT count(*) FROM treatments
extra gold: select count(*) from dogs where dog_id not in ( select dog_id from treatments )

index: 981
db_id: dog_kennels
extra pred: SELECT count(*) FROM owners WHERE owner_id NOT IN (SELECT owner_id FROM dogs WHERE abandoned_yn  =  'Y')
extra gold: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )

index: 997
db_id: dog_kennels
medium pred: SELECT T1.breed_name ,  T2.size_description FROM Breeds AS T1 JOIN Sizes AS T2 ON T1.breed_code  =  T2.size_code
medium gold: SELECT DISTINCT breed_code ,  size_code FROM dogs

index: 998
db_id: dog_kennels
medium pred: SELECT DISTINCT breed_code ,  size_code FROM sipeed
medium gold: SELECT DISTINCT breed_code ,  size_code FROM dogs

index: 999
db_id: dog_kennels
medium pred: SELECT T1.first_name ,  T2.treatment_type_description FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_Types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code
medium gold: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code

index: 1000
db_id: dog_kennels
medium pred: SELECT T1.first_name ,  T2.treatment_type_description FROM Professionals AS T1 JOIN Treatment_Types AS T2 ON T1.role_code  =  T2.treatment_type_code
medium gold: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code

index: 1033
db_id: real_estate_properties
medium pred: SELECT T1.property_type_description FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code  =  T2.property_type_code
medium gold: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code

index: 1034
db_id: real_estate_properties
hard pred: SELECT T1.property_name FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code WHERE T2.property_type_description  =  "House" OR (T2.property_type_description  =  "Apartment" AND T1.room_count  >  1)
hard gold: SELECT property_name FROM Properties WHERE property_type_code  =  "House" UNION SELECT property_name FROM Properties WHERE property_type_code  =  "Apartment" AND room_count  >  1

